{"components/customers-canvas/customers-canvas-se":"\r\n<au-simple-editor></au-simple-editor>\r\n<link id=\"se-styles\" rel=\"stylesheet\">\r\n\r\n<script id=\"se-source\"></script>\r\n\r\n<script>\r\n\r\n    const context = JSON.parse({{ jsContext }});\r\n\r\n    const addToCartUrl = \"/remote/v1/cart/add\";\r\n\r\n    async function getTemporaryUserId(cartId) {\r\n\r\n        if (localStorage.getItem('cc-tempUserId')) {\r\n            if (cartId === null) {\r\n                localStorage.removeItem('cc-tempUserId');\r\n            } else {\r\n                const response = await fetch(`https://bigcommerce-adapter.azurewebsites.net/api/bigcommerce-adapter/v1/temp-user/${localStorage.getItem('cc-tempUserId')}/status?tenantId=1379&storefrontId=1397`,\r\n                    {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-type': 'application/json',\r\n                        },\r\n                    });\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    if (data.status === 0) {\r\n                        return data.userId;\r\n                    } else {\r\n                        localStorage.removeItem('cc-tempUserId');\r\n                    }\r\n                } else {\r\n                    let errorText = await response.text();\r\n                    console.error(\"failed to load \" + response.url, response.status, response.statusText, errorText);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (cartId === null) {\r\n            const response = await fetch(`https://bigcommerce-adapter.azurewebsites.net/api/bigcommerce-adapter/v1/temp-user?tenantId=1379&storefrontId=1397`,\r\n                {\r\n                    method: 'POST',\r\n                    body: \"\",\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                    },\r\n                });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                if (data.id !== null) {\r\n                    localStorage.setItem('cc-tempUserId', data.id);\r\n                    return data.id;\r\n                } else {\r\n                    console.error('error: ' + data.message);\r\n                }\r\n            } else {\r\n                let errorText = await response.text();\r\n                console.error(\"failed to load \" + response.url, response.status, response.statusText, errorText);\r\n            }\r\n        } else {\r\n            const response = await fetch(`https://bigcommerce-adapter.azurewebsites.net/api/bigcommerce-adapter/v1/temp-user?tenantId=1379&storefrontId=1397&cartId=${cartId}`,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                    },\r\n                });\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                if (data.id !== null) {\r\n                    localStorage.setItem('cc-tempUserId', data.id);\r\n                    return data.id;\r\n                } else {\r\n                    console.error('error: ' + data.message);\r\n                }\r\n            } else {\r\n                let errorText = await response.text();\r\n                console.error(\"failed to load \" + response.url, response.status, response.statusText, errorText);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function get(url) {\r\n        return await fetch(url, {\r\n            method: 'GET'\r\n        })\r\n            .then(handleErrors)\r\n            .then(response => {\r\n                let data = response.json();\r\n                return data;\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    async function post(url, bodyData, headers) {\r\n        await fetch(url, {\r\n            method: 'POST',\r\n            body: bodyData,\r\n            headers: headers\r\n        })\r\n            .then(handleErrors)\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    function handleErrors(response) {\r\n        if (!response.ok) {\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async function createRawProject(detail) {\r\n        let hidden = detail.properties._hidden;\r\n\r\n        hidden.downloadUrls = [];\r\n        hidden.snapshot = \"\";\r\n        hidden._snapshot = \"\";\r\n        hidden.sku = detail.sku;\r\n        hidden.originalProductId = detail.originalProductId;\r\n\r\n        let body = {\r\n            items: [\r\n                {\r\n                    designIds: [detail.key],\r\n                    externalId: \"\",\r\n                    fields: {},\r\n                    hidden: JSON.stringify(hidden),\r\n                    key: detail.key,\r\n                    quantity: detail.quantity,\r\n                    userId: detail.properties._userId\r\n                }\r\n            ]\r\n        };\r\n\r\n        let requestUrl = new URL(\"https://bigcommerce-adapter.azurewebsites.net/api/bigcommerce-adapter/v1/raw-projects\");\r\n        requestUrl.searchParams.append('tenantId', 1379);\r\n        requestUrl.searchParams.append('storefrontId', 1397);\r\n\r\n        let headers = {\r\n            \"Content-Type\": \"application/json\"\r\n        };\r\n\r\n        await post(requestUrl, JSON.stringify(body), headers);\r\n    }\r\n\r\n    async function getPimProductIntegrationDetails(sku) {\r\n\r\n        let requestUrl = new URL(\r\n            \"https://bigcommerce-adapter.azurewebsites.net/api/bigcommerce-adapter/v1/products/\" +\r\n            sku +\r\n            \"/pim-product-integration-details\"\r\n        );\r\n\r\n        requestUrl.searchParams.append('tenantId', \"1379\");\r\n        requestUrl.searchParams.append('storefrontId', \"1397\");\r\n\r\n        let response = await get(requestUrl.href);\r\n\r\n        return response;\r\n    }\r\n\r\n    async function submit(detail) {\r\n        let productIntegrationDetails = await getPimProductIntegrationDetails(detail.sku);\r\n\r\n        let attribute = \"attribute[\" + productIntegrationDetails.productIntegrationModifierId + \"]\";\r\n\r\n        let body = new URLSearchParams();\r\n        body.append(attribute, detail.key);\r\n        body.append(\"action\", \"add\");\r\n        body.append(\"qty[]\", detail.quantity);\r\n        body.append(\"product_id\", productIntegrationDetails.id);\r\n\r\n        await post(window.location.origin + addToCartUrl, body);\r\n    }\r\n\r\n    function redirectToCart() {\r\n        window.location.href = window.location.origin + \"/cart.php\";\r\n    }\r\n\r\n    async function getSimpleEditorUrlFromBO() {\r\n\r\n        let getIntegrationFromBoUrl = new URL(\"https://customerscanvashub.com/api/v1/tenants/1379/integrations/\" + '{{product.id}}');\r\n        getIntegrationFromBoUrl.searchParams.append(\"storefrontId\", \"1397\");\r\n\r\n        let data = await get(getIntegrationFromBoUrl);\r\n\r\n        return data.result.simpleEditorUrl;\r\n    }\r\n\r\n    async function setSimpleEditorScriptSource(editorConfig) {\r\n\r\n        let simpleEditorUrl = await getSimpleEditorUrlFromBO(editorConfig);\r\n        document.getElementById(\"se-styles\").setAttribute(\"href\", simpleEditorUrl + \"/styles.css\");\r\n        document.getElementById(\"se-source\").setAttribute(\"src\", simpleEditorUrl + \"/editor.js\");\r\n    }\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", async () => {\r\n        let productId = '{{product.id}}';\r\n        let userId = context.customer ? context.customer.id : await getTemporaryUserId(context.cartId);\r\n\r\n        await setSimpleEditorScriptSource();\r\n\r\n        const simpleEditor = document.getElementsByTagName(\"au-simple-editor\").item(0);\r\n\r\n        document.getElementById('se-source').addEventListener('load', function () {\r\n            simpleEditor.setEditorConfig({\r\n                backOfficeUrl: \"https://customerscanvashub.com\",\r\n                tenantId: \"1379\",\r\n                product: { id: productId },\r\n                user: { id: userId },\r\n                ecommerceSystemId: \"1397\"\r\n            });\r\n\r\n            simpleEditor.addEventListener(\"addtocart\", async (event) => {\r\n                await createRawProject(event.detail);\r\n                await submit(event.detail);\r\n                redirectToCart();\r\n            });\r\n        });\r\n\r\n    });\r\n\r\n</script>\r\n"}
